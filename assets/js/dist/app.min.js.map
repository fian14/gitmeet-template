{"version":3,"sources":["app.min.js"],"names":["angular","module","config","$locationProvider","$urlRouterProvider","$stateProvider","$disqusProvider","setShortname","html5Mode","otherwise","state","url","controller","templateUrl","resolve","_postData","$stateParams","$http","$state","$timeout","$window","get","postId","then","res","scroll","data","go","_admin","$auth","noop","directive","restrict","replace","factory","$q","method","headers","authToken","window","localStorage","getItem"],"mappings":";;;;;;;AAUAA,QAAQC,OACJ,WAEI,YACA,YACA,YACA,yBACA,uBACA,aAKRD,QACCC,OAAO,WACPC,QACI,oBAAqB,qBAAsB,iBAAkB,kBAC9D,SAASC,EAAmBC,EAAoBC,EAAgBC,GAG5DA,EAAgBC,aAAa,WAG7BJ,EAAkBK,WAAU,GAC5BJ,EAAmBK,UAAU,KAE7BJ,EACCK,MAAM,QACHC,IAAM,IACNC,WAAa,QACbC,YAAc,0BAEjBH,MAAM,YACHC,IAAM,sBACNC,WAAa,QACbC,YAAc,0BAEjBH,MAAM,OACHC,IAAM,YACNC,WAAa,QACbC,YAAc,0BAEjBH,MAAM,UACHC,IAAM,kBACNC,WAAa,QACbC,YAAc,0BAEjBH,MAAM,QACHC,IAAM,gBACNC,WAAa,OACbC,YAAc,uBACdC,SACIC,WAAa,eAAgB,QAAS,SAAU,WAAY,UAAW,SAASC,EAAcC,EAAOC,EAAQC,EAAUC,GACnH,MAAOH,GAAMI,IAAI,aAAeL,EAAaM,QAAQC,KAAK,SAASC,GAK/D,MAJAL,GAAS,WACLC,EAAQK,OAAO,EAAG,KAGfD,EAAIE,MACZ,WACC,MAAOR,GAAOS,GAAG,eAKhCjB,MAAM,SACHC,IAAM,YACNE,YAAc,0BAEjBH,MAAM,gBACHC,IAAM,gBACNC,WAAa,eACbC,YAAc,+BACdC,SACIc,QAAU,QAAS,SAAU,SAASC,EAAOX,GACzC,MAAOW,GAAMN,KAAK,WACd,MAAOL,GAAOS,GAAG,mBAClB3B,QAAQ8B,WAItBpB,MAAM,kBACHC,IAAM,kBACNC,WAAa,iBACbC,YAAc,6BACdC,SACIc,QAAU,QAAS,SAAU,SAASC,EAAOX,GACzC,MAAOW,GAAMN,KAAKvB,QAAQ8B,KAAM,WAC5B,MAAOZ,GAAOS,GAAG,uBAKhCjB,MAAM,mBACHC,IAAM,2BACNC,WAAa,kBACbC,YAAc,6BACdC,SACIc,QAAU,QAAS,SAAU,SAASC,EAAOX,GACzC,MAAOW,GAAMN,KAAKvB,QAAQ8B,KAAM,WAC5B,MAAOZ,GAAOS,GAAG,oBAGzBZ,WAAa,eAAgB,QAAS,SAASC,EAAcC,GACzD,MAAOA,GAAMI,IAAI,aAAeL,EAAaM,QAAQC,KAAK,SAASC,GAC/D,MAAOA,GAAIE,eAYnC1B,QACCC,OAAO,WACP8B,UAAU,SAAU,WACjB,OACIC,SAAW,IACXC,SAAU,EACVpB,YAAc,+BAMtBb,QACCC,OAAO,WACPiC,QAAQ,SAAU,QAAS,KAAM,SAASjB,EAAOkB,GAC9C,MAAOlB,IACHN,IAAM,2BACNyB,OAAS,MACTC,SACIC,UAAYC,OAAOC,aAAaC,QAAQ,cAAgB","file":"app.min.js","sourcesContent":["/*!\r\n *\t@author      Uday Hiwarale <uday hiwarale@gmail.com>\r\n *\t@profile     https://github.com/thatisuday\r\n *\t@link        http://gitmeet.com\r\n * \t@version     1.0.1\r\n * \t@license     MIT License, http://www.opensource.org/licenses/MIT\r\n**/\r\n\r\n\n// Create gitmeet module\r\nangular.module(\r\n    'gitmeet',\r\n    [\r\n        'ngAnimate',\r\n        'ui.router',\r\n        'yaru22.md',\r\n        'yaru22.angular-timeago',\r\n        'thatisuday.ui-stater',\r\n        'ngDisqus'\r\n    ]\r\n);\r\n\r\n// Configure dependencies\r\nangular\r\n.module('gitmeet')\r\n.config(\r\n    ['$locationProvider', '$urlRouterProvider', '$stateProvider', '$disqusProvider',\r\n    function($locationProvider, $urlRouterProvider, $stateProvider, $disqusProvider){\r\n\r\n        //disqus\r\n        $disqusProvider.setShortname('gitmeet');\r\n\r\n        // ui-router\r\n        $locationProvider.html5Mode(true);\r\n        $urlRouterProvider.otherwise('/');\r\n\r\n        $stateProvider\r\n        .state('home', {\r\n            url : '/',\r\n            controller : 'posts',\r\n            templateUrl : '/templates/posts.html'\r\n        })\r\n        .state('category', {\r\n            url : '/category/:category',\r\n            controller : 'posts',\r\n            templateUrl : '/templates/posts.html'\r\n        })\r\n        .state('tag', {\r\n            url : '/tag/:tag',\r\n            controller : 'posts',\r\n            templateUrl : '/templates/posts.html'\r\n        })\r\n        .state('search', {\r\n            url : '/search/:search',\r\n            controller : 'posts',\r\n            templateUrl : '/templates/posts.html'\r\n        })\r\n        .state('post', {\r\n            url : '/post/:postId',\r\n            controller : 'post',\r\n            templateUrl : '/templates/post.html',\r\n            resolve : {\r\n                _postData : ['$stateParams', '$http', '$state', '$timeout', '$window', function($stateParams, $http, $state, $timeout, $window){\r\n                    return $http.get('/api/post/' + $stateParams.postId).then(function(res){\r\n                        $timeout(function(){\r\n                            $window.scroll(0, 0);\r\n                        });\r\n\r\n                        return res.data;\r\n                    }, function(){\r\n                        return $state.go('home');\r\n                    });\r\n                }]\r\n            }\r\n        })\r\n        .state('about', {\r\n            url : '/about-me',\r\n            templateUrl : '/templates/about.html'\r\n        })\r\n        .state('admin-signin', {\r\n            url : '/admin/signin',\r\n            controller : 'admin-signin',\r\n            templateUrl : '/templates/admin/signin.html',\r\n            resolve : {\r\n                _admin : ['$auth', '$state', function($auth, $state){\r\n                    return $auth.then(function(){\r\n                        return $state.go('admin-add-post');\r\n                    }, angular.noop);\r\n                }]\r\n            }\r\n        })\r\n        .state('admin-add-post', {\r\n            url : '/admin/add-post',\r\n            controller : 'admin-add-post',\r\n            templateUrl : '/templates/admin/post.html',\r\n            resolve : {\r\n                _admin : ['$auth', '$state', function($auth, $state){\r\n                    return $auth.then(angular.noop, function(){\r\n                        return $state.go('admin-signin');\r\n                    });\r\n                }]\r\n            }\r\n        })\r\n        .state('admin-edit-post', {\r\n            url : '/admin/edit-post/:postId',\r\n            controller : 'admin-edit-post',\r\n            templateUrl : '/templates/admin/post.html',\r\n            resolve : {\r\n                _admin : ['$auth', '$state', function($auth, $state){\r\n                    return $auth.then(angular.noop, function(){\r\n                        return $state.go('admin-signin');\r\n                    });\r\n                }],\r\n                _postData : ['$stateParams', '$http', function($stateParams, $http){\r\n                    return $http.get('/api/post/' + $stateParams.postId).then(function(res){\r\n                        return res.data;\r\n                    });\r\n                }]\r\n            }\r\n        })\r\n        ;\r\n\r\n    }]\r\n);\r\n\r\n\r\n// Custom directives\r\nangular\r\n.module('gitmeet')\r\n.directive('gmPost', function(){\r\n    return {\r\n        restrict : 'A',\r\n        replace : false,\r\n        templateUrl : '/templates/post-item.html'\r\n    }\r\n});\r\n\r\n\r\n// Auth check service\r\nangular\r\n.module('gitmeet')\r\n.factory('$auth', ['$http', '$q', function($http, $q){\r\n    return $http({\r\n        url : '/api/admin/check-session',\r\n        method : 'GET',\r\n        headers : {\r\n            authToken : window.localStorage.getItem('authToken') || null\r\n        }\r\n    });\r\n}]);\r\n"],"sourceRoot":"/source/"}