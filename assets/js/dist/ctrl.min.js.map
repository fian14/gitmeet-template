{"version":3,"sources":["ctrl.min.js"],"names":["angular","module","controller","$scope","$http","$state","$location","$timeout","postData","content","$","tab","savePost","authToken","window","localStorage","getItem","url","method","data","headers","then","res","status","postId","alert","err","_postData","isEdit","console","log","deletePost","confirm","signinData","signin","setItem","go","similarPosts","params","ignore","tags","limit","$stateParams","posts","postLoaded","skip","_","has","category","loadPosts","more","concat"],"mappings":"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","file":"ctrl.min.js","sourcesContent":["angular\r\n.module('gitmeet')\r\n.controller('admin-add-post', ['$scope', '$http', '$state', '$location', '$timeout', function($scope, $http, $state, $location, $timeout){\r\n    $scope.postData = {\r\n        content : \"#Hello World!\" \r\n    };\r\n    \r\n    $timeout(function(){\r\n        $('.stater-admin-add-post .menu .item').tab();\r\n    });\r\n\r\n    $scope.savePost = function(){\r\n        var authToken = window.localStorage.getItem('authToken');\r\n        if(!authToken){\r\n            return alert('You are not signed in.');\r\n        }\r\n\r\n    \t$http({\r\n    \t\turl : '/api/admin/post',\r\n    \t\tmethod : 'POST',\r\n    \t\tdata : $scope.postData,\r\n            headers : {\r\n                authToken :  authToken\r\n            }\r\n    \t})\r\n    \t.then(function(res){\r\n    \t\tif(res.status == 201){\r\n                return $location.url('/post/' + res.data.postId);\r\n            }\r\n\r\n            return alert(res.data);\r\n    \t},\r\n    \tfunction(err){\r\n    \t\talert(err.data);\r\n    \t});\r\n    }\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('admin-edit-post', ['_postData', '$scope', '$http', '$state', '$location', '$timeout', function(_postData, $scope, $http, $state, $location, $timeout){\r\n   \r\n    $scope.postData = _postData;\r\n    $scope.isEdit = true;\r\n    \r\n    $timeout(function(){\r\n        $('.stater-admin-edit-post .menu .item').tab();\r\n    });\r\n\r\n    $scope.savePost = function(){\r\n        var authToken = window.localStorage.getItem('authToken');\r\n        if(!authToken){\r\n            return alert('You are not signed in.');\r\n        }\r\n\r\n    \t$http({\r\n    \t\turl : '/api/admin/post/' + _postData.postId,\r\n    \t\tmethod : 'PUT',\r\n    \t\tdata : $scope.postData,\r\n            headers : {\r\n                authToken :  authToken\r\n            }\r\n    \t})\r\n    \t.then(function(res){\r\n    \t\t$location.url('/post/' + res.data.postId);\r\n    \t},\r\n    \tfunction(err){\r\n            console.log(err.data);\r\n    \t\talert(err.data);\r\n    \t});\r\n    }\r\n\r\n\r\n    $scope.deletePost= function(){\r\n        if(!confirm('are you sure????')){\r\n            return false;\r\n        }\r\n\r\n        var authToken = window.localStorage.getItem('authToken');\r\n        if(!authToken){\r\n            return alert('You are not signed in.');\r\n        }\r\n\r\n        $http({\r\n            url : '/api/admin/post/' + _postData.postId,\r\n            method : 'Delete',\r\n            headers : {\r\n                authToken :  authToken\r\n            }\r\n        })\r\n        .then(function(res){\r\n            $location.url('/');\r\n        },\r\n        function(err){\r\n            console.log(err.data);\r\n            alert(err.data);\r\n        });\r\n    }\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('admin-signin', ['$scope', '$http', '$state', '$timeout', function($scope, $http, $state, $timeout){\r\n    $scope.signinData = {};\r\n    \r\n    $scope.signin = function(){\r\n    \t$http({\r\n    \t\turl : '/api/admin/signin',\r\n    \t\tmethod : 'POST',\r\n    \t\tdata : $scope.signinData\r\n    \t})\r\n    \t.then(function(res){\r\n    \t\twindow.localStorage.setItem('authToken', res.data);\r\n    \t\t$timeout(function(){\r\n                $state.go('admin-add-post');\r\n            }, 1000);\r\n    \t},\r\n    \tfunction(err){\r\n    \t\tif(err.status == 500) return alert(err.data);\r\n    \t\tif(err.status == 401) return alert('username not valid.');\r\n    \t\tif(err.status == 403) return alert('password not valid.');\r\n    \t\tif(err.status == 406) return alert('no data received.');\r\n    \t});\r\n    }\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('post', ['_postData', '$scope', '$http', function(_postData, $scope, $http){\r\n\t// store post data\r\n\t$scope.postData = _postData;\r\n\r\n\t// store similar posts\r\n\t$scope.similarPosts = [];\r\n\r\n\t// Load similar posts\r\n\t$http({\r\n\t\turl : '/api/posts',\r\n\t\tmethod : 'GET',\r\n\t\tparams : {\r\n\t\t\tignore : _postData.postId,\r\n\t\t\ttags : _postData.tags,\r\n\t\t\tlimit : 6\r\n\t\t}\r\n\t})\r\n\t.then(function(res){\r\n\t\t$scope.similarPosts = res.data;\r\n\t});\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('posts', ['$scope', '$http', '$stateParams', function($scope, $http, $stateParams){\r\n\r\n\t// score posts in `posts` var\r\n\t$scope.posts = [];\r\n\r\n\t// set to `true` on posts fetch complete\r\n\t$scope.postLoaded = false;\r\n\r\n\t// query string param to send with request\r\n\t// skip and limit counters\r\n\t$scope.params = {\r\n\t\tskip : 0,\r\n\t\tlimit : 10,\r\n\t}\r\n\r\n\t// if category page, add category to request\r\n\tif(_.has($stateParams, 'category')){\r\n\t\t$scope.params.category = $stateParams.category;\r\n\t}\r\n\r\n\t// post loader ajax function\r\n\t($scope.loadPosts = function(more){\r\n\t\t// if more is true, append posts\r\n\t\tif(more){\r\n\t\t\t$scope.params.skip = $scope.params.skip + $scope.params.limit;\r\n\t\t}\r\n\r\n\t\t$http({\r\n\t\t\turl : '/api/posts',\r\n\t\t\tmethod : 'GET',\r\n\t\t\tparams : $scope.params\r\n\t\t})\r\n\t\t.then(function(res){\r\n\t\t\t$scope.posts = _.concat($scope.posts, res.data);\r\n\t\t\t$scope.postLoaded = true;\r\n\t\t})\r\n\t})(false);\t\r\n}]);"],"sourceRoot":"/source/"}