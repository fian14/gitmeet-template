{"version":3,"sources":["ctrl.min.js"],"names":["angular","module","controller","$scope","$http","$state","$location","$timeout","postData","content","$","tab","savePost","authToken","window","localStorage","getItem","url","method","data","headers","then","res","status","postId","alert","err","dzOptions","previewsContainer","clickable","dzCallbacks","success","file","prompt","_postData","isEdit","console","log","deletePost","confirm","signinData","signin","setItem","location","reload","openSearch","query","similarPosts","params","nPostId","tags","limit","__home_ignore_categories","$stateParams","posts","postLoaded","skip","_","has","category","tag","search","current","name","nCategories","loadPosts","more","concat"],"mappings":"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","file":"ctrl.min.js","sourcesContent":["/*!\r\n *\t@author      Uday Hiwarale <uday hiwarale@gmail.com>\r\n *\t@profile     https://github.com/thatisuday\r\n *\t@link        http://gitmeet.com\r\n * \t@version     1.0.1\r\n * \t@license     MIT License, http://www.opensource.org/licenses/MIT\r\n**/\r\n\r\n\nangular\r\n.module('gitmeet')\r\n.controller('admin-add-post',\r\n    ['$scope', '$http', '$state', '$location', '$timeout',\r\n    function($scope, $http, $state, $location, $timeout){\r\n    \r\n    $scope.postData = {\r\n        content : \"#Hello World!\" \r\n    };\r\n    \r\n    $timeout(function(){\r\n        $('.stater-admin-add-post .menu .item').tab();\r\n    });\r\n\r\n    $scope.savePost = function(){\r\n        var authToken = window.localStorage.getItem('authToken');\r\n        if(!authToken){\r\n            return alert('You are not signed in.');\r\n        }\r\n\r\n    \t$http({\r\n    \t\turl : '/api/admin/post',\r\n    \t\tmethod : 'POST',\r\n    \t\tdata : $scope.postData,\r\n            headers : {\r\n                authToken :  authToken\r\n            }\r\n    \t})\r\n    \t.then(function(res){\r\n    \t\tif(res.status == 201){\r\n                return $location.url('/post/' + res.data.postId);\r\n            }\r\n\r\n            return alert(res.data);\r\n    \t},\r\n    \tfunction(err){\r\n    \t\talert(err.data);\r\n    \t});\r\n    }\r\n\r\n\r\n    /*\r\n     *  dropzone\r\n    **/\r\n    $scope.dzOptions = {\r\n        url : '/api/image',\r\n        previewsContainer : false,\r\n        clickable : '#add-image',\r\n        headers : {\r\n            authToken :  window.localStorage.getItem('authToken')\r\n        }\r\n    };\r\n\r\n    $scope.dzCallbacks = {\r\n        'success' : function(file, url){\r\n            window.prompt('copy url', url);\r\n        }\r\n    };\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('admin-edit-post',\r\n    ['_postData', '$scope', '$http', '$state', '$location', '$timeout',\r\n    function(_postData, $scope, $http, $state, $location, $timeout){\r\n   \r\n    $scope.postData = _postData;\r\n    $scope.isEdit = true;\r\n    \r\n    $timeout(function(){\r\n        $('.stater-admin-edit-post .menu .item').tab();\r\n    });\r\n\r\n    $scope.savePost = function(){\r\n        var authToken = window.localStorage.getItem('authToken');\r\n        if(!authToken){\r\n            return alert('You are not signed in.');\r\n        }\r\n\r\n    \t$http({\r\n    \t\turl : '/api/admin/post/' + _postData.postId,\r\n    \t\tmethod : 'PUT',\r\n    \t\tdata : $scope.postData,\r\n            headers : {\r\n                authToken :  authToken\r\n            }\r\n    \t})\r\n    \t.then(function(res){\r\n    \t\t$location.url('/post/' + res.data.postId);\r\n    \t},\r\n    \tfunction(err){\r\n            console.log(err.data);\r\n    \t\talert(err.data);\r\n    \t});\r\n    }\r\n\r\n\r\n    $scope.deletePost= function(){\r\n        if(!confirm('are you sure????')){\r\n            return false;\r\n        }\r\n\r\n        var authToken = window.localStorage.getItem('authToken');\r\n        if(!authToken){\r\n            return alert('You are not signed in.');\r\n        }\r\n\r\n        $http({\r\n            url : '/api/admin/post/' + _postData.postId,\r\n            method : 'Delete',\r\n            headers : {\r\n                authToken :  authToken\r\n            }\r\n        })\r\n        .then(function(res){\r\n            $location.url('/');\r\n        },\r\n        function(err){\r\n            console.log(err.data);\r\n            alert(err.data);\r\n        });\r\n    }\r\n\r\n\r\n    /*\r\n     *  dropzone\r\n    **/\r\n    $scope.dzOptions = {\r\n        url : '/api/image',\r\n        previewsContainer : false,\r\n        clickable : '#add-image',\r\n        headers : {\r\n            authToken :  window.localStorage.getItem('authToken')\r\n        }\r\n    };\r\n\r\n    $scope.dzCallbacks = {\r\n        'success' : function(file, url){\r\n            window.prompt('copy url', url);\r\n        }\r\n    };\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('admin-signin', ['$scope', '$http', '$state', '$timeout', function($scope, $http, $state, $timeout){\r\n    $scope.signinData = {};\r\n    \r\n    $scope.signin = function(){\r\n    \t$http({\r\n    \t\turl : '/api/admin/signin',\r\n    \t\tmethod : 'POST',\r\n    \t\tdata : $scope.signinData\r\n    \t})\r\n    \t.then(function(res){\r\n    \t\twindow.localStorage.setItem('authToken', res.data);\r\n    \t\twindow.location.reload();\r\n    \t},\r\n    \tfunction(err){\r\n    \t\tif(err.status == 500) return alert(err.data);\r\n    \t\tif(err.status == 401) return alert('username not valid.');\r\n    \t\tif(err.status == 403) return alert('password not valid.');\r\n    \t\tif(err.status == 406) return alert('no data received.');\r\n    \t});\r\n    }\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('home', ['$scope', '$location', function($scope, $location){\r\n\t\r\n\t// Open search dialog\r\n\t// and redirect user to search page\r\n\t$scope.openSearch = function(){\r\n\t\tvar query = prompt('What do you want to search?', 'type here...');\r\n\t\t$location.url('/search/' + query);\r\n\t}\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('post', ['_postData', '$scope', '$http', function(_postData, $scope, $http){\r\n\t// store post data\r\n\t$scope.postData = _postData;\r\n\r\n\t// store similar posts\r\n\t$scope.similarPosts = [];\r\n\r\n\t// Load similar posts\r\n\t$http({\r\n\t\turl : '/api/posts',\r\n\t\tmethod : 'GET',\r\n\t\tparams : {\r\n\t\t\tnPostId : _postData.postId,\r\n\t\t\ttags : _postData.tags,\r\n\t\t\tlimit : 6\r\n\t\t}\r\n\t})\r\n\t.then(function(res){\r\n\t\t$scope.similarPosts = res.data;\r\n\t});\r\n}]);\nangular\r\n.module('gitmeet')\r\n.controller('posts',\r\n\t['__home_ignore_categories', '$scope', '$http', '$state', '$stateParams',\r\n\tfunction(__home_ignore_categories, $scope, $http, $state, $stateParams){\r\n\r\n\t// score posts in `posts` var\r\n\t$scope.posts = [];\r\n\r\n\t// set to `true` on posts fetch complete\r\n\t$scope.postLoaded = false;\r\n\r\n\t// query string param to send with request\r\n\t// skip and limit counters\r\n\t$scope.params = {\r\n\t\tskip : 0,\r\n\t\tlimit : 10,\r\n\t}\r\n\r\n\t// if category page, add category to the request\r\n\tif(_.has($stateParams, 'category')){\r\n\t\t$scope.params.category = $stateParams.category;\r\n\t}\r\n\r\n\t// if tag page, add tags to the request\r\n\tif(_.has($stateParams, 'tag')){\r\n\t\t$scope.params.tags = $stateParams.tag;\r\n\t}\r\n\r\n\t// if search page, add search to the request\r\n\tif(_.has($stateParams, 'search')){\r\n\t\t$scope.params.search = $stateParams.search;\r\n\t}\r\n\r\n\t// if home controller, remove `life` & `news` category from posts\r\n\tif($state.current.name == 'home'){\r\n\t\t$scope.params.nCategories = __home_ignore_categories;\r\n\t}\r\n\r\n\t// post loader ajax function\r\n\t($scope.loadPosts = function(more){\r\n\t\t// if more is true, append posts\r\n\t\tif(more){\r\n\t\t\t$scope.params.skip = $scope.params.skip + $scope.params.limit;\r\n\t\t}\r\n\r\n\t\t$http({\r\n\t\t\turl : '/api/posts',\r\n\t\t\tmethod : 'GET',\r\n\t\t\tparams : $scope.params\r\n\t\t})\r\n\t\t.then(function(res){\r\n\t\t\t$scope.posts = _.concat($scope.posts, res.data);\r\n\t\t\t$scope.postLoaded = true;\r\n\t\t})\r\n\t})(false);\t\r\n}]);"],"sourceRoot":"/source/"}